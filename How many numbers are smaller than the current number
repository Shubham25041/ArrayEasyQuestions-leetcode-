class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<int>ans;
        for(int i=0; i<nums.size(); i++){
            int count = 0;
            for(int j=0; j<nums.size(); j++){
                if(i==j)
                continue;
                else{
                    if(nums[i] > nums[j])
                    count++;
                }
            }
            ans.push_back(count);
        }
        return ans;
    }
};

                                                                                                    // OR

class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        // Create bucket for counting sort
        vector<int>buckets(102,0);
        // Get frequency of each element
        for(int num: nums){
            buckets[num]++;
        }

        // count samller no. than each element
        for(int i=1; i<buckets.size(); i++){
            buckets[i] += buckets[i-1];
        }

        // Populate the result
        vector<int>result(nums.size());
        for(int i=0; i<result.size(); i++){
            if(nums[i] == 0)
            result[i] = 0;
            else
            result[i] = buckets[nums[i] - 1];
        }

        return result;

    }
};
